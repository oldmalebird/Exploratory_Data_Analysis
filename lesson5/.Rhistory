geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_continuous(breaks = seq(0, 113, 5))
summary(pf$friend_count)
summary(log10(pf$friend_count))
summary(log10(pf$friend_count +1))
summary(sqrt(pf$friend_count))
library(gridExtra)
p1 <- qplot(x = friend_count, data = pf)
p2 <- qplot(x = log10(friend_count + 1), data = pf)
p3 <- qplot(x = sqrt(friend_count), data = pf)
grid.arrange(p1, p2, p3, ncol=1)
p1 <- ggplot(aes(x = friend_count), data = pf) + geom_histogram()
p2 <- p1 + scale_x_log10()
p3 <- p1 + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol=1)
logScale <- qplot(x = log10(friend_count), data = pf)
countScale <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale, ncol = 2)
qplot(x = friend_count, data = subset(pf,!is.na(gender)), binwidth = 10,
geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf,!is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('好友数量') +
ylab('Percentage of users with that friend count')
qplot(x = www_likes, data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender) +
scale_x_continuous() +
scale_x_log10()
by(pf$www_likes, pf$gender, sum)
qplot(x = gender, y = friend_count,
data = subset(pf,!is.na(gender)),
geom = 'boxplot', color = gender)
#scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
qplot(x = gender, y = friend_count,
data = subset(pf,!is.na(gender)),
geom = 'boxplot', color = gender) +
scale_y_continuous(limits = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf,!is.na(gender)),
geom = 'boxplot', color = gender, ylim = c(0, 1000))
qplot(x = gender, y = friend_count,
data = subset(pf,!is.na(gender)),
geom = 'boxplot', color = gender) +
coord_cartesian(ylim = c(0, 1000))
by(pf$friend_count, pf$gender, summary)
qplot(x = gender, y = friendships_initiated,
data = subset(pf,!is.na(gender)),
geom = 'boxplot', color = gender) +
coord_cartesian(ylim = c(0,200))
by(pf$friendships_initiated, pf$gender, summary)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 200, aes(color = cut)) +
#scale_fill_brewer(type = 'qual', palette = 1) +
facet_wrap(~color)
ggplot(aes(x = price, color = cut), data = diamonds) +
geom_histogram(binwidth = 200) +
#scale_fill_brewer(type = 'qual', palette = 1) +
facet_wrap(~color)
ggplot(aes(x = price, color = cut), data = diamonds) +
geom_histogram(binwidth = 200) +
scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = price, color = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
#scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
scale_x_log10() +
facet_wrap(~color)
ggplot(aes(x = log(price), fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = log10(price), fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
facet_wrap(~color)
?geom_histogram
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
scale_y_log10() +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
#scale_y_log10() +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
#scale_x_log10() +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
scale_x_log10() +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(binwidth = 500) +
scale_fill_brewer(type = 'qual') +
#scale_x_log10() +
facet_wrap(~color)
ggplot(aes(x=table,y=price),data=diamonds)+
geom_point(aes(color=cut))+
scale_color_brewer(type = 'qual')+
scale_x_continuous(breaks=seq(50,80,2),lim=c(50,80))
ggplot(aes(x = price,fill = cut),data = diamonds)+
geom_histogram(bins = 35,position = position_stack(reverse = TRUE))+
scale_x_log10()+
facet_wrap(~color, ncol = 3)+
scale_fill_brewer(type ='qual')
ggplot(aes(x = price,fill = cut),data = diamonds)+
geom_histogram(bins = 500,position = position_stack(reverse = TRUE))+
scale_x_log10()+
facet_wrap(~color, ncol = 3)+
scale_fill_brewer(type ='qual')
ggplot(aes(x = price,fill = cut),data = diamonds)+
geom_histogram(bins = 35,position = position_stack(reverse = TRUE))+
scale_x_log10()+
facet_wrap(~color, ncol = 3)+
scale_fill_brewer(type ='qual')
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(bins = 35) +
scale_fill_brewer(type = 'qual') +
#scale_x_log10() +
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(bins = 35) +
scale_fill_brewer(type = 'qual') +
scale_x_log10()+
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(bins = 35) +
scale_fill_brewer(type = 'qual') +
scale_x_log10() +
#scale_x_log10()+
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
geom_histogram(bins = 35) +
geom_histogram(binwidth = 1000) +
scale_fill_brewer(type = 'qual') +
scale_x_log10() +
#scale_x_log10()+
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
#geom_histogram(bins = 35) +
geom_histogram(binwidth = 1000) +
scale_fill_brewer(type = 'qual') +
scale_x_log10() +
#scale_x_log10()+
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
#geom_histogram(bins = 35) +
geom_histogram(binwidth = 1000) +
scale_fill_brewer(type = 'qual') +
#scale_x_log10() +
#scale_x_log10()+
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
#geom_histogram(bins = 35) +
geom_histogram(binwidth = 400) +
scale_fill_brewer(type = 'qual') +
#scale_x_log10() +
#scale_x_log10()+
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
#geom_histogram(bins = 35) +
geom_histogram(binwidth = 400) +
scale_fill_brewer(type = 'qual') +
#scale_x_log10() +
scale_x_log10()+
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
#geom_histogram(bins = 35) +
geom_histogram(bins = 40) +
scale_fill_brewer(type = 'qual') +
#scale_x_log10() +
scale_x_log10()+
facet_wrap(~color)
ggplot(aes(x = price, fill = cut), data = diamonds) +
#geom_histogram(bins = 35) +
geom_histogram(bins = 40) +
scale_fill_brewer(type = 'qual') +
scale_x_log10() +
facet_wrap(~color)
ggplot(aes(x=table,y=price,fill=cut),data=diamonds)+
geom_point(aes(color=cut))+
scale_color_brewer(type = 'qual')+
scale_x_continuous(breaks=seq(50,80,2),lim=c(50,80))
ggplot(aes(x=table,y=price,fill=cut),data=diamonds)+
geom_point(aes(color=cut))+
scale_color_brewer(type = 'qual')+
scale_x_continuous(breaks=seq(50,80,2))
?diamonds
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
ylim(quantile(diamondsprice,0),quantile(diamondsprice, .99)) +
scale_color_brewer(type = 'div', direction = -1)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
ylim(quantile(diamondsprice,0),quantile(diamondsprice, .99)) +
scale_color_brewer(type = 'div', direction = -1)
ggplot(data = diamonds, aes(x = price, y = carat)) +
geom_point(alpha = 1/100) +
xlim(0, quantile(diamonds$volume, 0.99)) +
#ylim(0, quantile(diamonds$carat, 0.99))
ggplot(data = diamonds, aes(x = price, y = carat)) +
geom_point(alpha = 1/100) +
xlim(0, quantile(diamonds$volume, 0.99))
#ylim(0, quantile(diamonds$carat, 0.99))
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
ylim(quantile(diamondsprice,0),quantile(diamondsprice, .99)) +
scale_color_brewer(type = 'div', direction = -1)
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
#ylim(quantile(diamondsprice,0),quantile(diamondsprice, .99)) +
scale_color_brewer(type = 'div', direction = -1)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
#ylim(quantile(diamondsprice,0),quantile(diamondsprice, .99)) +
scale_color_brewer(type = 'div')
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
#ylim(quantile(diamondsprice,0),quantile(diamondsprice, .99)) +
scale_color_brewer(type = 'div', direction = -1)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
#ylim(quantile(diamondsprice,0),quantile(diamondsprice, .99)) +
scale_color_brewer(type = 'div')
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
scale_y_log10() +
scale_color_brewer(type = 'div', direction = -1)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point(position = position_stack(reverse = TRUE)) +
xlim(0, quantile(diamonds$volume, 0.99)) +
scale_y_log10() +
scale_color_brewer(type = 'div', direction = -1)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
scale_y_log10() +
scale_color_brewer(type = 'div', direction = -1)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
#ylim(quantile(diamondsprice,0),quantile(diamondsprice, .99)) +
scale_color_brewer(type = 'div', direction = -1)
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_y_log10() +
scale_color_brewer(type = 'div', direction = -1)
diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_y_log10() +
scale_color_brewer(type = 'div', direction = -1)
diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_y_log10() +
coord_cartesian(xlim =c(0,300))+
scale_color_brewer(type = 'div', direction = -1)
diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0.5, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_y_log10() +
coord_cartesian(xlim =c(0,300))+
scale_color_brewer(type = 'div', direction = -1)
diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0.1, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_y_log10() +
coord_cartesian(xlim =c(0,300))+
scale_color_brewer(type = 'div', direction = -1)
diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
ggplot(aes(x = volume, y = price, color = clarity), data = diamonds) +
geom_point() +
xlim(0.01, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_y_log10() +
coord_cartesian(xlim =c(0,300))+
scale_color_brewer(type = 'div', direction = -1)
min(diamonds$volume)
min(diamonds$volume)
min(diamonds$x)
min(diamonds$y)
diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
ggplot(aes(x = volume, y = price, color = clarity),
data = subset(diamonds, volume >0) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_y_log10() +
coord_cartesian(xlim =c(0,300))+
scale_color_brewer(type = 'div', direction = -1)
diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
ggplot(aes(x = volume, y = price, color = clarity),
data = subset(diamonds, volume >0)) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_y_log10() +
coord_cartesian(xlim =c(0,300))+
scale_color_brewer(type = 'div', direction = -1)
diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
ggplot(aes(x = volume, y = price, color = clarity),
data = subset(diamonds, volume >0)) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_y_log10() +
coord_cartesian(xlim =c(0,300))+
scale_color_brewer(type = 'div', direction = -1)
diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
ggplot(aes(x = volume, y = price, color = clarity),
data = subset(diamonds, volume >0)) +
geom_point() +
xlim(0, quantile(diamonds$volume, 0.99)) +
ylim(0, quantile(diamonds$price, 0.99)) +
scale_y_log10() +
coord_cartesian(xlim =c(0,300))+
scale_color_brewer(type = 'div', direction = -1)
pf = read.delim('pseudo_facebook.tsv')
pf$prop_initiated <- pf$friendships_initiated/pf$friend_count
pf$year_joined <- floor(2014 - pf$tenure/365)
summary(pf$year_joined)
pf$year_joined <- floor(2014 - pf$tenure/365)
summary(pf$year_joined)
table(pf$year_joined)
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004, 2009, 2011, 2012, 2014))
table(pf$year_joined.bucket)
ggplot(aes(x = tenure, y = prop_initiated),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket))
pf$prop_initiated<- ifelse(pf$friend_count>0, pf$friendships_initiated/pf$friend_count,NA)
pf$year_joined <- floor(2014 - pf$tenure/365)
summary(pf$year_joined)
table(pf$year_joined)
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004, 2009, 2011, 2012, 2014))
table(pf$year_joined.bucket)
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004, 2009, 2011, 2012, 2014))
table(pf$year_joined.bucket)
ggplot(aes(x = tenure, y = prop_initiated),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket))
ggplot(data = subset(pf, !is.na(prop_initiated) & !is.na(year_joined.bucket)), aes(x = tenure, y = prop_initiated)) +
geom_line(aes(color = year_joined.bucket))
ggplot(pf, aes(x=tenure, y=prop_initiated, color=year_joined.bucket)) +
geom_line(stat='summary', fun.y=median, na.rm=TRUE)
with(subset(pf,year_joined.bucket=='(2012,2014]'),mean(prop_initiated))
with(subset(pf, year_joined.bucket == '(2012,2014]'), mean(prop_initiated))
with(subset(pf, year_joined.bucket = '(2012,2014]'), mean(prop_initiated))
with(subset(pf, year_joined.bucket == '(2012,2014]'), mean(prop_initiated))
with(subset(pf, tenure >= 1), mean(prop_initiated))
with(subset(pf, year_joined.bucket == '(2012,2014]'), mean(prop_initiated))
with(subset(pf, tenure >= 1), mean(prop_initiated))
with(subset(pf, tenure >= 1), summary(friend_count / tenure))
with(subset(pf, year_joined.bucket == '(2012,2014]'), mean(prop_initiated))
with(subset(pf, tenure >= 1), summary(prop_initiated))
with(subset(pf, year_joined.bucket == '(2012,2014]'), summary(prop_initiated))
ggplot(aes(x=cut,y=price/carat),data = diamonds)+
geom_jitter(aes(color=color)+
facet_wrap(~clarity)
ggplot(aes(x=cut,y=price/carat),data = diamonds))+
ggplot(aes(x=cut,y=price/carat),data = diamonds)+
geom_jitter(aes(color=color)+
facet_wrap(~clarity)
ggplot(aes(x=cut,y=price/carat),data = diamonds)+
geom_jitter(aes(color=color)+
facet_wrap(~clarity)
ggplot(aes(x=cut, y=price/carat), data = diamonds) +
geom_point() +
geom_jitter(aes(color=color)+
facet_wrap(~clarity)
ggplot(aes(x=cut, y=price/carat), data = diamonds) +
geom_point() +
geom_jitter(aes(color=color)+
facet_wrap(~clarity)
ggplot(aes(x=cut, y=price/carat), data = diamonds) +
ggplot(aes(x=cut, y=price/carat), data = diamonds) +
geom_point() +
#geom_jitter(aes(color=color)+
#facet_wrap(~clarity)
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point()
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point()
geom_jitter(aes(color=color)+
#facet_wrap(~clarity)
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point() +
geom_jitter(aes(color=color)+
#facet_wrap(~clarity)
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point() +
geom_jitter(aes(color=color)
#facet_wrap(~clarity)
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point() +
#geom_jitter(aes(color=color)
facet_wrap(~clarity)
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point() +
geom_jitter(aes(color=color)) +
facet_wrap(~clarity)
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point() +
geom_jitter(aes(color=color)) +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point(aes(color=color)) +
geom_jitter(aes(color=color)) +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
diamonds$cut <- factor(diamonds$cut, levels=rev(levels(diamonds$cut)))
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point(aes(color=color)) +
geom_jitter(aes(color=color)) +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
diamonds$cut <- factor(diamonds$cut, levels=rev(levels(diamonds$cut)))
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point(aes(color=color)) +
geom_jitter(aes(color=color)) +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
diamonds$cut <- factor(diamonds$cut, levels=rev(levels(diamonds$cut)))
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point(aes(color=color)) +
geom_jitter(aes(color=color)) +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point(aes(color=color)) +
geom_jitter(aes(color=color)) +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
#diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point(aes(color=color)) +
geom_jitter(aes(color=color)) +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
#diamonds$clarity <- factor(diamonds$clarity, levels=rev(levels(diamonds$clarity)))
diamonds$cut <- factor(diamonds$cut, levels=rev(levels(diamonds$cut)))
ggplot(aes(x = cut, y = price/carat), data = diamonds) +
geom_point(aes(color=color)) +
geom_jitter(aes(color=color)) +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
