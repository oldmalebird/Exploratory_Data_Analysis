summary(mtcars)
summary(mtcars)
summary(mtcars)
efficient <- subset(mtcars,mpg > 23)
mtcars[mtcars$mpg>23,]
install.packages("devtools")
reddit<-read.csv('reddit.csv')
getwd()
setwd("D:/GitHub/Exploratory_Data_Analysis/lesson2")
reddit<-read.csv('reddit.csv')
reddit
str(reddit)
table(reddit$employment.status)
summary(reddit)
levels(reddit$age.range)
library(ggplot2)
qplot(data = reddit, x = age.range)
qplot(data = reddit, x = income.range)
#setting levels of ordered factors solution
reddit$age.range <- ordered(reddit$age.range, levels = c('Under 18', '18-24','25-34','35-44','45-54','55-64','65 or Above'))
#alternate solution
reddit$age.range <- factor(reddit$age.range, levels = c('Under 18', '18-24','25-34','35-44','45-54','55-64','65 or Above'), ordered = T)
qplot(data = reddit, x = age.range)
View(reddit)
setwd("D:/GitHub/Exploratory_Data_Analysis/lesson3")
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
names(pf)
#install.packages('ggplot2')
library(ggplot2)
qp;ot(x = dob_day, data = pf)
pf <- read.csv('pseudo_facebook.tsv', sep='\t')
names(pf)
#install.packages('ggplot2')
library(ggplot2)
qplot(x = dob_day, data = pf)
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=waiver())
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=1:31)
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=c(1:31))
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=c(1,4,31))
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=1:31)
library(ggthemes)
install.packages('ggthemes', dependencies = TRUE)
install.packages('ggthemes', dependencies = TRUE)
library(ggthemes)
library(ggthemes)
theme_set(theme_minimal(24))
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=1:31)
theme_set(theme_minimal(14))
qplot(x = dob_day, data = pf) + scale_x_continuous(breaks=1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
ggplot(x = dob_day, data = pf) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month, ncol = 3)
ggplot(x = dob_day, data = pf) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month, ncol = 3)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month, ncol = 3)
ggplot(data = pf, aes(x = dob_day)) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
qplot(x=friend_count, data=pf)
qplot(x = friend_count, data = pf, xlim = c(0,1000))
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000))
install.packages('gridExtra')
library(gridExtra)
install.packages("swirl")
library(swirl)
pf <- data(diamonds)
pf <- data(diamonds)
pf <- data(diamonds)
pf <- data(diamonds)
pf <- data('diamonds')
data('diamonds')
library(ggplot2)
data()
data()
?diamonds
qplot(data = reddit, x = income.range)
#data()
?diamonds
#data()
#?diamonds
summary(diamonds)
names(diamonds)
diamonds$color
library(ggplot2)
#data()
#?diamonds
summary(diamonds)
head(diamonds)
head(diamonds)
head(diamonds)
ggplot(aes(x = price), data = pf)
ggplot(aes(x = price), data = diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 5000)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 1000)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price>5000]
diamonds[diamonds$price>5000,]
diamonds[diamonds$price>5000,]
diamonds[diamonds$price<500]
mtcars[mtcars$mpg>23]
summary(mtcars)
mtcars[mtcars$mpg>23]
summary(mtcars)
mtcars[mtcars$mpg>23,]
diamonds[diamonds$price<500，]
diamonds[diamonds$price<500,]
diamonds[diamonds$price<5000,]
diamonds[diamonds$price<5000,]
mtcars[mtcars$mpg>23]
#data()
#?diamonds
summary(diamonds)
library(ggplot2)
#data()
#?diamonds
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price<5000,]
diamonds[diamonds$price<5000]
summary(mtcars)
efficient <- subset(mtcars,mpg > 23)
efficient <- subset(mtcars,mpg > 23)
mtcars[mtcars$mpg>23,]
mtcars[mtcars$mpg>23]
mtcars[mtcars$mpg>23,]
mtcars[mtcars$mpg>23,]
library(ggplot2)
#data()
#?diamonds
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price<5000]
library(ggplot2)
#data()
#?diamonds
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price<5000]
mtcars[mtcars$mpg>23,]
mtcars[mtcars$mpg>23,]
summary(mtcars)
mtcars[mtcars$mpg>23,]
mtcars[mtcars$mpg>23,]
diamonds[diamonds$price < 5000,]
summary(mtcars)
library(ggplot2)
#data()
#?diamonds
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price < 5000,]
mtcars[mtcars$mpg>23,]
efficient <- subset(diamonds, price < 500)
efficient
mtcars[mtcars$mpg>23,]
summary(diamonds)
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
library(ggplot2)
diamonds[diamonds$price < 5000,]
#data()
#?diamonds
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price < 5000,]
efficient <- subset(diamonds, price < 500)
efficient
mtcars[mtcars$mpg>23,]
summary(mtcars)
mtcars[mtcars$mpg>23,]
efficient <- subset(mtcars,mpg > 23)
efficient <- subset(mtcars,mpg > 23)
mtcars[mtcars$mpg>23,]
summary(mtcars)
mtcars[mtcars$mpg>23,]
mtcars[mtcars$mpg > 23,]
mtcars[mtcars$mpg > 23]
mtcars[mtcars$mpg > 23,]
summary(mtcars)
mtcars[mtcars$mpg>23,]
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
plot(pressure)
plot(pressure)
plot(pressure)
plot(pressure)
mtcars[mtcars$mpg > 23,]
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
#data()
#?diamonds
summary(diamonds)
library(ggplot2)
#data()
#?diamonds
summary(diamonds)
diamonds[diamonds$price < 5000,]
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
knitr::opts_chunk$set(echo = TRUE)
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
mtcars[mtcars$mpg>23,]
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price < 5000,]
library(ggplot2)
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price < 500,]
diamonds[diamonds$price < 5000,]
library(ggplot2)
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
mtcars[mtcars$mpg>23,]
mtcars[mtcars$mpg>23,]
mtcars[mtcars$mpg>23,]
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
library(ggplot2)
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price < 5000,]
library(ggplot2)
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
library(ggplot2)
summary(diamonds)
library(ggplot2)
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
library(ggplot2)
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 5000,]
diamonds[diamonds$price < 500,]
diamonds[diamonds$price < 250,]
diamonds[diamonds$price > 15000,]
diamonds[diamonds$price >= 15000,]
diamonds[diamonds$price >= 15000,]
library(ggplot2)
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price >= 15000,]
diamonds[diamonds$price >= 15000,]
library(ggplot2)
summary(diamonds)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 500)
diamonds[diamonds$price >= 15000,]
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 50) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 200)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 50) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggsave('priceHistogram.png)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 50) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggsave('priceHistogram.png')
# 你会输入哪个代码，创建按照性别的直方图平面？
# 将它增加到下列代码中。
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_grid(. ~ gender)
pf = read.delim('pseudo_facebook.tsv')
#视频用的是这个：
#pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
names(pf)
# 你会输入哪个代码，创建按照性别的直方图平面？
# 将它增加到下列代码中。
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_grid(. ~ gender)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
scale_x_continuous(breaks = seq(0, 1000, 100)) +
facet_wrap(~cut)
table(pf$gender)
table(pf$gender)
by(pf$friend_count,pf$gender, summary)
table(diamonds$cut)
by(diamonds$price, diamonds$cut, summary)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
scale_x_continuous(breaks = seq(0, 1000, 100)) +
facet_wrap(~cut, scales="free_y")
summary(pf$friend_count)
summary(log10(pf$friend_count))
summary(log10(pf$friend_count +1))
summary(sqrt(pf$friend_count))
library(gridExtra)
p1 <- qplot(x = friend_count, data = pf)
p2 <- qplot(x = log10(friend_count + 1), data = pf)
p3 <- qplot(x = sqrt(friend_count), data = pf)
grid.arrange(p1, p2, p3, ncol=1)
p1 <- ggplot(aes(x = friend_count), data = pf) + geom_histogram()
p2 <- p1 + scale_x_log10()
p3 <- p1 + scale_x_sqrt()
grid.arrange(p1, p2, p3, ncol=1)
library(gridExtra)
p1 <- ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
scale_x_continuous(breaks = seq(0, 1000, 100)) +
facet_wrap(~cut, scales="free_y")
p2 <- p1 + scale_x_log10()
library(gridExtra)
p1 <- ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
#scale_x_continuous(breaks = seq(0, 1000, 100)) +
facet_wrap(~cut, scales="free_y")
p2 <- p1 + scale_x_log10()
library(gridExtra)
p1 <- ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
facet_wrap(~cut, scales="free_y")
p2 <- p1 + scale_x_log10()
library(gridExtra)
p1 <- ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
cale_x_continuous(breaks = seq(0, 1000, 100)) +
facet_wrap(~cut, scales="free_y")
library(gridExtra)
p1 <- ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
scale_x_continuous(breaks = seq(0, 1000, 100)) +
facet_wrap(~cut, scales="free_y")
p2 <- p1 + scale_x_log10()
library(gridExtra)
p1 <- ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
scale_x_continuous(breaks = seq(0, 1000, 100)) +
facet_wrap(~cut, scales="free_y") +
scale_x_log10()
library(gridExtra)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
scale_x_continuous(breaks = seq(0, 1000, 100)) +
facet_wrap(~cut, scales="free_y") +
scale_x_log10()
library(gridExtra)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
facet_wrap(~cut, scales="free_y") +
scale_x_log10()
library(gridExtra)
ggplot(aes(x = price), data = diamonds) +
geom_histogram(binwidth = 100) +
scale_x_log10() +
facet_wrap(~cut, scales="free_y")
library(gridExtra)
ggplot(aes(x = price), data = diamonds) +
scale_x_log10() +
facet_wrap(~cut, scales="free_y")
library(gridExtra)
ggplot(aes(x = price), data = diamonds) +
geom_histogram() +
scale_x_log10() +
facet_wrap(~cut, scales="free_y")
library(gridExtra)
ggplot(aes(x = price), data = diamonds) +
geom_histogram() +
facet_wrap(~cut, scales="free_y") +
scale_x_log10()
qplot(x = friend_count, data = subset(pf,!is.na(gender)), binwidth = 10,
geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
by(pf$friend_count, pf$gender, summary)
ggplot(aes(x = price), data = diamonds) +
geom_boxplot() +
facet_wrap(~cut, scales="free_y") +
coord_cartesian()
ggplot(aes(y = price), data = diamonds) +
geom_boxplot() +
facet_wrap(~cut, scales="free_y") +
coord_cartesian()
IQR(subset(diamonds, price <1000)$price)
IQR(subset(diamonds, price <1000)$price)
IQR(subset(diamonds, color ='D')$price)
by(diamonds$price, diamonds$color, summary)
IQR(subset(diamonds, color ='D')$price)
IQR(subset(diamonds, color ='J')$price)
IQR(subset(diamonds, color ='D')$price)
IQR(subset(diamonds, color ='J')$price)
IQR(subset(diamonds)$price)
IQR(diamonds$price)
IQR(subset(diamonds, color =='J')$price)
IQR(subset(diamonds, color =='D')$price)
ggplot(aes(y = price/carat), data = diamonds) +
geom_boxplot() +
facet_wrap(~cut, scales="free_y") +
coord_cartesian()
ggplot(aes(x = friend_count, y = ..count../sum(..count..)), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('好友数量') +
ylab('Percentage of users with that friend count')
ggplot(aes(y = price/carat), data = diamonds) +
geom_boxplot(aes(color = color)) +
facet_wrap(~cut, scales="free_y")
ggplot(aes(y = price/carat), data = diamonds) +
geom_boxplot(aes(color = color)) +
ggplot(aes(y = price/carat), data = diamonds) +
geom_boxplot(aes(color = color))
qplot(x = friend_count, y = ..count../sum(..count..),
data = subset(pf,!is.na(gender)),
xlab = 'Friend Count',
ylab = 'Proportion of Users with that friend count',
binwidth = 10,
geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(aes(color = color), binwidth=500)
by(diamonds$carat, summary)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(aes(color = color), binwidth=5)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(aes(color = color), binwidth=1)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(aes(color = color), binwidth=0.5)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(), binwidth=0.5)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly( binwidth=0.5)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1)
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(breaks = seq(0, 10, 0.1))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(breaks = seq(0, 5, 0.1))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(breaks = seq(0, 5, 0.5))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(breaks = seq(0, 5, 0.5)) +
scale_y_continuous(breaks = seq(0,10000,2000))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.05) +
scale_x_continuous(breaks = seq(0, 5, 0.5)) +
scale_y_continuous(breaks = seq(0,10000,2000))
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth=0.1) +
scale_x_continuous(breaks = seq(0, 5, 0.5)) +
scale_y_continuous(breaks = seq(0,10000,2000))
?lubridate
??lubridate
